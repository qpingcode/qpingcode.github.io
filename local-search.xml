<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Create blog with hexo</title>
    <link href="/2025/09/06/Create-blog-with-hexo/"/>
    <url>/2025/09/06/Create-blog-with-hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>根据<a href="https://hexo.io/zh-cn/">首页教程</a> 可以快速搭建一个本地博客.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g     # 全局安装hexo-cli,这样就可以在控制台中使用hexo命令,比如 Hexo init<br>hexo init blog              # 初始化,等同于git clone + npm intall<br>cd blog         <br>npm install<br>hexo server                 # 预览博客修改<br></code></pre></td></tr></table></figure><h2 id="Hexo-基本用法"><a href="#Hexo-基本用法" class="headerlink" title="Hexo 基本用法"></a>Hexo 基本用法</h2><p>本地搭建完博客后,我们需要了解一些常用的hexo命令</p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p>可以像下面这样新建一个文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new post &quot;Hello my blog&quot;<br></code></pre></td></tr></table></figure><p><code>/source/_posts/</code> 目录下多了一个文件 <code>Hello-my-blog.md</code>.<br>写好博客以后,可以通过以下命令预览.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo server<br></code></pre></td></tr></table></figure><p>通过 generate 命令可以把md文件编译为html文件,可以知道最终发布文件是什么样的.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo generate<br></code></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>它本身是支持多种部署方式的:</p><ul><li>Github Actions: 将 md&#x2F;yml&#x2F;json 等文件传到 github, 由 github 通过 actions 编译成 html&#x2F;js&#x2F;css 并发布到 github pages.</li><li>Deploy from a branch: 自己在本地编译, 然后将编译后的 html&#x2F;js&#x2F;css 上传到 github 某个分支, github 通过 actions 发布到 github pages.</li></ul><p>我喜欢自己在本地编译, 然后发布到github, 这样可以知道编译的最终产物是什么, 方便调试.<br>通过 <a href="https://hexo.io/zh-cn/docs/one-command-deployment">deploy</a> 命令可以把文件发布到服务器.<br>这个命令作用支持多种发布方式,我是通过 Git pages 部署, 它会默默的做以下几件事情</p><ol><li>创建 .deploy_git 目录</li><li>将 md 文件编译后放到 .deploy_git 中</li><li>在 .deploy_git 中进行git 初始化 (可看到这个目录下多了 .git 目录)</li><li>根据配置将变更提到到 git 指定的远程仓库和远程分支</li></ol><p>按上面的步骤可知最重要的是告诉 hexo 远程仓库的地址和分支, 所以需要在 <code>_config.yml</code> 中添加以下配置.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:qpingcode/qpingcode.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">&quot;Site updated: <span class="hljs-template-variable">&#123;&#123; now(&#x27;yyyy-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p>如果您的 Github Pages 需要使用 CNAME 文件自定义域名，请将 CNAME 文件置于 source 目录下，只有这样 hexo deploy 才能将 CNAME 文件一并推送至部署分支。<br>一定要放到 source 目录下,否则每次deploy都会删掉CNAME, 导致最终 Github Pages 会出现 404.</p>          </div><p>Github上也需要对应的设置 &gt; Settings &gt; Pages &gt; Build and Deployment &gt; Source 选择 Deploy from a branch, branch 选择 gh-pages&#x2F;<br><img src="/images/Create-blog-withhexo-github-deploy-methods.png.png" alt="github deploy method"></p><h2 id="安装主题-Fluid"><a href="#安装主题-Fluid" class="headerlink" title="安装主题: Fluid"></a>安装主题: Fluid</h2><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">Reference</a></p><h2 id="评论系统-Gitalk"><a href="#评论系统-Gitalk" class="headerlink" title="评论系统: Gitalk"></a>评论系统: Gitalk</h2><h2 id="部署方式-Actions-Github-Pages"><a href="#部署方式-Actions-Github-Pages" class="headerlink" title="部署方式 Actions &amp; Github Pages"></a>部署方式 Actions &amp; Github Pages</h2><h3 id="部署后404问题解决"><a href="#部署后404问题解决" class="headerlink" title="部署后404问题解决"></a>部署后404问题解决</h3>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
